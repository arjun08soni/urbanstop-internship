{"version":3,"sources":["components/NavBar.js","container/DataStatistics.js","container/DataQualityIndex.js","container/BusinessImpact.js","container/ListInfo.js","container/ActivityStream.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","src","alt","href","style","padding","color","icon","faDatabase","faCodeBranch","rotation","faPlayCircle","faBug","faCommentDots","faChartLine","faQuestion","id","Component","DataStatistics","props","state","options","chart","xaxis","type","stroke","curve","width","markers","size","title","text","align","legend","position","fillColors","fontSize","fontWeight","onItemHover","highlightDataSeries","itemMargin","horizontal","vertical","tooltip","enabled","shared","followCursor","inverseOrder","custom","undefined","fillSeriesColor","theme","fontFamily","onDatasetHover","x","show","format","formatter","y","seriesName","series","name","data","Date","getTime","this","height","DataQualityIndex","chartOptions","labels","dataLabels","plotOptions","pie","offsetX","offsetY","donut","value","total","showAlways","label","BusinessImpact","errors","workflow","importance","number","ListInfo","heading","map","item","key","backgroundColor","toFixed","activities","response","date","ActivityStream","activity","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b85025f4.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./NavBar.css\";\nimport {\n  faDatabase,\n  faCodeBranch,\n  faPlayCircle,\n  faBug,\n  faCommentDots,\n  faChartLine,\n  faQuestion\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nexport default class Navbar extends Component {\n  render() {\n    return (\n      <div className=\"Navbar\">\n        <div className=\"tabs\">\n          <div className=\"logo\">\n            <img\n              src=\"https://secureservercdn.net/160.153.137.166/h4i.b17.myftpupload.com/wp-content/uploads/2018/01/web_logo_grey.png\"\n              alt=\"ZSCORE\"\n            />\n          </div>\n          <a href=\"#\">\n            <FontAwesomeIcon\n              style={{ padding: \"0 5px\", color: \"#447ccf\" }}\n              icon={faDatabase}\n            />\n            Data Library\n          </a>\n          <a href=\"#\">\n            <FontAwesomeIcon\n              style={{ padding: \"0 5px\", color: \"#447ccf\" }}\n              icon={faCodeBranch}\n              rotation={90}\n            />\n            Workflows\n          </a>\n          <a href=\"#\">\n            <FontAwesomeIcon\n              style={{ padding: \"0 5px\", color: \"#447ccf\" }}\n              icon={faPlayCircle}\n            />\n            Scheduler\n          </a>\n          <a href=\"#\">\n            <FontAwesomeIcon\n              style={{ padding: \"0 5px\", color: \"#447ccf\" }}\n              icon={faBug}\n            />\n            Error Manager\n          </a>\n          <a href=\"#\">\n            <FontAwesomeIcon\n              style={{ padding: \"0 5px\", color: \"#447ccf\" }}\n              icon={faCommentDots}\n            />\n            Notifications\n          </a>\n          <a href=\"#\">\n            <FontAwesomeIcon\n              style={{ padding: \"0 5px\", color: \"#447ccf\" }}\n              icon={faChartLine}\n            />\n            Reports\n          </a>\n        </div>\n        <div className=\"nav-right\">\n          <a href=\"#\">\n            <FontAwesomeIcon style={{ color: \"#747474\" }} icon={faQuestion} />\n          </a>\n          <a id=\"rk\" href=\"#\">\n            RK\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Chart from \"react-apexcharts\";\nimport \"./DataStatistics.css\";\n\nclass DataStatistics extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      options: {\n        chart: {\n          id: \"line-chart\"\n        },\n        xaxis: {\n          type: \"datetime\"\n        },\n        stroke: {\n          curve: \"straight\",\n          width: 2\n        },\n        markers: {\n          size: 4\n        },\n        title: {\n          text: \"Data Statistics\",\n          align: \"left\"\n        },\n        legend: {\n          position: \"top\",\n          markers: {\n            fillColors: [\"\", \"\", \"gray\", \"gray\", \"gray\"]\n          },\n          fontSize: 13,\n          fontWeight: 500,\n          onItemHover: {\n            highlightDataSeries: true\n          },\n          itemMargin: {\n            horizontal: 15,\n            vertical: 0\n          }\n        },\n        tooltip: {\n          enabled: true,\n          shared: true,\n          followCursor: false,\n          inverseOrder: false,\n          custom: undefined,\n          fillSeriesColor: false,\n          theme: \"dark\",\n          style: {\n            fontSize: \"12px\",\n            fontFamily: \"Raleway\"\n          },\n          onDatasetHover: {\n            highlightDataSeries: true\n          },\n          x: {\n            show: true,\n            format: \"dd MMM\",\n            formatter: undefined\n          },\n          y: {\n            show: true,\n            formatter: undefined,\n            title: {\n              formatter: (seriesName) => seriesName\n            }\n          }\n        }\n      },\n      series: [\n        {\n          name: \"Incoming Data\",\n          data: [\n            {\n              x: new Date(\"2018-02-26\").getTime(),\n              y: 110\n            },\n            {\n              x: new Date(\"2018-02-27\").getTime(),\n              y: 110\n            },\n            {\n              x: new Date(\"2018-02-28\").getTime(),\n              y: 110\n            },\n            {\n              x: new Date(\"2018-03-1\").getTime(),\n              y: 100\n            },\n            {\n              x: new Date(\"2018-03-2\").getTime(),\n              y: 210\n            },\n            {\n              x: new Date(\"2018-03-3\").getTime(),\n              y: 320\n            },\n            {\n              x: new Date(\"2018-03-4\").getTime(),\n              y: 200\n            },\n            {\n              x: new Date(\"2018-03-5\").getTime(),\n              y: 180\n            },\n            {\n              x: new Date(\"2018-03-6\").getTime(),\n              y: 160\n            },\n            {\n              x: new Date(\"2018-03-7\").getTime(),\n              y: 400\n            },\n            {\n              x: new Date(\"2018-03-8\").getTime(),\n              y: 340\n            },\n            {\n              x: new Date(\"2018-03-9\").getTime(),\n              y: 330\n            },\n            {\n              x: new Date(\"2018-03-10\").getTime(),\n              y: 330\n            },\n            {\n              x: new Date(\"2018-03-11\").getTime(),\n              y: 200\n            },\n            {\n              x: new Date(\"2018-03-12\").getTime(),\n              y: 280\n            },\n            {\n              x: new Date(\"2018-03-13\").getTime(),\n              y: 250\n            },\n            {\n              x: new Date(\"2018-03-14\").getTime(),\n              y: 160\n            },\n            {\n              x: new Date(\"2018-03-15\").getTime(),\n              y: 130\n            },\n            {\n              x: new Date(\"2018-03-16\").getTime(),\n              y: 210\n            },\n            {\n              x: new Date(\"2018-03-17\").getTime(),\n              y: 270\n            },\n            {\n              x: new Date(\"2018-03-18\").getTime(),\n              y: 310\n            },\n            {\n              x: new Date(\"2018-03-19\").getTime(),\n              y: 260\n            },\n            {\n              x: new Date(\"2018-03-20\").getTime(),\n              y: 210\n            }\n          ]\n        },\n        {\n          name: \"No. of errors detected\",\n          data: [\n            {\n              x: new Date(\"2018-02-27\").getTime(),\n              y: 50\n            },\n            {\n              x: new Date(\"2018-02-28\").getTime(),\n              y: 5\n            },\n            {\n              x: new Date(\"2018-03-01\").getTime(),\n              y: 10\n            },\n            {\n              x: new Date(\"2018-03-02\").getTime(),\n              y: 90\n            },\n            {\n              x: new Date(\"2018-03-03\").getTime(),\n              y: 50\n            },\n            {\n              x: new Date(\"2018-03-04\").getTime(),\n              y: 20\n            },\n            {\n              x: new Date(\"2018-03-05\").getTime(),\n              y: 300\n            },\n            {\n              x: new Date(\"2018-03-06\").getTime(),\n              y: 110\n            },\n            {\n              x: new Date(\"2018-03-07\").getTime(),\n              y: 200\n            },\n            {\n              x: new Date(\"2018-03-08\").getTime(),\n              y: 270\n            },\n            {\n              x: new Date(\"2018-03-09\").getTime(),\n              y: 200\n            },\n            {\n              x: new Date(\"2018-03-10\").getTime(),\n              y: 110\n            },\n            {\n              x: new Date(\"2018-03-11\").getTime(),\n              y: 90\n            },\n            {\n              x: new Date(\"2018-03-12\").getTime(),\n              y: 105\n            },\n            {\n              x: new Date(\"2018-03-13\").getTime(),\n              y: 60\n            },\n            {\n              x: new Date(\"2018-03-14\").getTime(),\n              y: 90\n            },\n            {\n              x: new Date(\"2018-03-15\").getTime(),\n              y: 50\n            },\n            {\n              x: new Date(\"2018-03-16\").getTime(),\n              y: 100\n            },\n            {\n              x: new Date(\"2018-03-17\").getTime(),\n              y: 130\n            },\n            {\n              x: new Date(\"2018-03-18\").getTime(),\n              y: 401\n            },\n            {\n              x: new Date(\"2018-03-19\").getTime(),\n              y: 110\n            },\n            {\n              x: new Date(\"2018-03-20\").getTime(),\n              y: 110\n            }\n          ]\n        },\n        {\n          name: \"No. of errors fixed\",\n          data: [\n            {\n              x: new Date(\"2018-02-26\").getTime(),\n              y: 110\n            }\n          ]\n        },\n        {\n          name: \"No. of errors unassigned\",\n          data: [\n            {\n              x: new Date(\"2018-02-26\").getTime(),\n              y: 110\n            }\n          ]\n        },\n        {\n          name: \"No. of errors assigned\",\n          data: [\n            {\n              x: new Date(\"2018-02-26\").getTime(),\n              y: 110\n            }\n          ]\n        }\n      ]\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"dataStatistics\">\n        <div className=\"line-chart\">\n          <Chart\n            options={this.state.options}\n            series={this.state.series}\n            type=\"line\"\n            width=\"90%\"\n            height=\"290\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default DataStatistics;\n","import React, { Component } from \"react\";\nimport Chart from \"react-apexcharts\";\nimport \"./DataQualityIndex.css\";\n\nclass DataQualityIndex extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      series: [55, 20],\n      chartOptions: {\n        labels: []\n      },\n      // labels: [],\n\n      options: {\n        title: {\n          text: \"Data Quality Index\"\n        },\n        chart: {\n          type: \"donut\"\n        },\n        dataLabels: {\n          enabled: false\n        },\n        plotOptions: {\n          pie: {\n            offsetX: 100,\n            offsetY: 50,\n            donut: {\n              labels: {\n                show: true,\n                name: {\n                  show: true,\n                  fontSize: \"30px\",\n                  fontFamily: \"Raleway\"\n                },\n                value: {\n                  show: true\n                },\n                total: {\n                  show: true,\n                  showAlways: true,\n                  label: \"Currently\",\n                  color: \"black\"\n                }\n              }\n            }\n          }\n        }\n      }\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"donut\">\n        <Chart\n          options={this.state.options}\n          series={this.state.series}\n          labels={this.state.chartOptions.labels}\n          type=\"donut\"\n          width=\"80%\"\n        />\n      </div>\n    );\n  }\n}\n\nexport default DataQualityIndex;\n","import React, { Component } from \"react\";\nimport Chart from \"react-apexcharts\";\nimport \"./DataQualityIndex.css\";\n\nclass BusinessImpact extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      series: [9, 5, 2],\n      chartOptions: {\n        labels: [\"High\", \"Medium\", \"Low\"]\n      },\n      options: {\n        title: {\n          text: \"Business Impact\"\n        },\n        chart: {\n          type: \"donut\"\n        },\n        dataLabels: {\n          enabled: false\n        },\n        plotOptions: {\n          pie: {\n            offsetX: 100,\n            offsetY: 50,\n            donut: {\n              labels: {\n                show: true,\n                name: {\n                  show: true,\n                  fontSize: \"39px\",\n                  fontFamily: \"Raleway\"\n                },\n                value: {\n                  show: true\n                },\n                total: {\n                  show: true,\n                  showAlways: true,\n                  label: \"Currently(in Millions)\",\n                  color: \"black\"\n                }\n              }\n            }\n          }\n        }\n      }\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"donut\">\n        <Chart\n          options={this.state.options}\n          series={this.state.series}\n          labels={this.state.chartOptions.labels}\n          type=\"donut\"\n          width=\"80%\"\n        />\n      </div>\n    );\n  }\n}\n\nexport default BusinessImpact;\n","import React, { Component } from \"react\";\nimport \"./ListInfo.css\";\n\nconst errors = [\n  {\n    id: \"a\",\n    type: \"Premium less than zero\",\n    workflow: \"MARKETING WORKFLOW 1\",\n    importance: \"HIGH\",\n    number: 1500\n  },\n  {\n    id: \"b\",\n    type: \"Sum insured less than zero\",\n    workflow: \"MARKETING WORKFLOW 1\",\n    importance: \"HIGH\",\n    number: 1500\n  },\n  {\n    id: \"c\",\n    type: \"Incorrect city names and address\",\n    workflow: \"MARKETING WORKFLOW 1\",\n    importance: \"Medium\",\n    number: 1500\n  },\n  {\n    id: \"d\",\n    type: \"Discharge date before admission date\",\n    workflow: \"MARKETING WORKFLOW 1\",\n    importance: \"HIGH\",\n    number: 1500\n  },\n  {\n    id: \"e\",\n    type: \"Wrong telephone numbers\",\n    workflow: \"MARKETING WORKFLOW 1\",\n    importance: \"Low\",\n    number: 1500\n  }\n];\n\nfunction ListInfo(props) {\n  return (\n    <div className=\"main-container\">\n      <div className=\"container-head\">\n        <h3 className=\"header-list\">{props.heading}</h3>\n        <a href=\"#\" id=\"more\">\n          More `&gt;`\n        </a>\n      </div>\n      <ul className=\"container\">\n        {errors.map((item) => (\n          <li key={item.id} className=\"listgroup\">\n            {item.type}\n            <span\n              id=\"importance\"\n              style={{\n                backgroundColor: item.importance == \"HIGH\" ? \"red\" : \"orange\"\n              }}\n            >\n              {item.importance}\n            </span>\n            <span\n              id=\"number\"\n              style={{\n                color: item.importance == \"HIGH\" ? \"red\" : \"orange\"\n              }}\n            >\n              {props.heading == \"Highest Business Impact\"\n                ? \"$\" + item.number.toFixed(2)\n                : props.heading == \"Assigned to me\"\n                ? \"\"\n                : item.number}\n            </span>\n            <ul className=\"noflex\">\n              <li>{item.workflow}</li>\n            </ul>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default ListInfo;\n","import React from \"react\";\nimport \"./ActivityStream.css\";\nimport {\n  faDatabase,\n  faCodeBranch,\n  faPlayCircle,\n  faBug,\n  faCommentDots\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst activities = [\n  {\n    id: \"a\",\n    type: \"Workflow - Marketing data 1\",\n    response: \"Finished running and 10,000 errors have been detected\",\n    date: \"Today\"\n  },\n  {\n    id: \"b\",\n    type: \"Data Library - earthquakes.csv added\",\n    response: \"earthquakws.csv added and data profiling begun\",\n    date: \"Today\"\n  },\n  {\n    id: \"c\",\n    type: \"@deleeps tagged you in a comment\",\n    response: \"Have a look at this dataset and see if it...more >\",\n    date: \"Today\"\n  },\n  {\n    id: \"d\",\n    type: \"Error - 10,000 errors detected\",\n    response: \"New errors detected in Marketing data 1\",\n    date: \"Today\"\n  },\n  {\n    id: \"e\",\n    type: \"Job - Marketing data 1 successfully run\",\n    response: \"Finished running and 10,000 errors have been detected\",\n    date: \"Today\"\n  }\n];\n\nfunction ActivityStream(props) {\n  return (\n    <div className=\"main-container\">\n      <div className=\"container-head\">\n        <h3 className=\"header-list\">Activity Stream</h3>\n        <a href=\"#\" id=\"more\">\n          More `&gt;`\n        </a>\n      </div>\n      <ul className=\"activityContainer\">\n        {activities.map((activity) => (\n          <li key={activity.id} id=\"listgroupActivity\">\n            <FontAwesomeIcon\n              id=\"activityIcon\"\n              style={{ padding: \"0 5px\", color: \"#447ccf\" }}\n              icon={\n                activity.id == \"a\"\n                  ? faCodeBranch\n                  : activity.id == \"b\"\n                  ? faDatabase\n                  : activity.id == \"c\"\n                  ? faCommentDots\n                  : activity.id == \"d\"\n                  ? faBug\n                  : activity.id == \"e\"\n                  ? faPlayCircle\n                  : \"\"\n              }\n            />\n            <div>{activity.type}</div>\n            <span id=\"number\">{activity.date}</span>\n            <ul className=\"noflex\">\n              <li>{activity.response}</li>\n            </ul>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default ActivityStream;\n","import React from \"react\";\nimport \"./index.css\";\nimport NavBar from \"./components/NavBar.js\";\nimport DataStatistics from \"./container/DataStatistics.js\";\nimport DataQualityIndex from \"./container/DataQualityIndex.js\";\nimport BusinessImpact from \"./container/BusinessImpact.js\";\nimport ListInfo from \"./container/ListInfo\";\nimport ActivityStream from \"./container/ActivityStream.js\";\n\nexport default function App() {\n  return (\n    <div>\n      <NavBar />\n      <DataStatistics />\n      <div className=\"container-app\">\n        <DataQualityIndex />\n        <ListInfo heading=\"Top Errors\" />\n        <ListInfo heading=\"Assigned to me\" />\n        <BusinessImpact />\n        <ListInfo heading=\"Highest Business Impact\" />\n        <ActivityStream />\n      </div>\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}